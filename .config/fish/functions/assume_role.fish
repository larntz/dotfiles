function assume_role --wraps=printf\ \"export\ AWS_ACCESS_KEY_ID=\%s\\nexport\ AWS_SECRET_ACCESS_KEY=\%s\\nexport\ AWS_SESSION_TOKEN=\%s\"\ \(aws\ sts\ assume-role\ \ \ \ \ --role-arn\ \ \ \ \ \ --role-session-name\ larntz\ \ \ \ \ \|\ jq\ -r\ \'.Credentials\ \|\ .AccessKeyId,\ .SecretAccessKey,\ .SessionToken\'\) --description alias\ assume_role=printf\ \"export\ AWS_ACCESS_KEY_ID=\%s\\nexport\ AWS_SECRET_ACCESS_KEY=\%s\\nexport\ AWS_SESSION_TOKEN=\%s\"\ \(aws\ sts\ assume-role\ \ \ \ \ --role-arn\ \ \ \ \ \ --role-session-name\ larntz\ \ \ \ \ \|\ jq\ -r\ \'.Credentials\ \|\ .AccessKeyId,\ .SecretAccessKey,\ .SessionToken\'\)
  printf "export AWS_ACCESS_KEY_ID=%s\nexport AWS_SECRET_ACCESS_KEY=%s\nexport AWS_SESSION_TOKEN=%s" (aws sts assume-role     --role-arn  $argv    --role-session-name larntz     | jq -r '.Credentials | .AccessKeyId, .SecretAccessKey, .SessionToken'); 
end
